##################################################################################
#                                                                                 
#   Conformance Pack:                                                             
#     Operational Best Practices for NIST CSF                                   
#                                                                                 
#   This conformance pack helps verify compliance with NIST CSF requirements.   
#                                                                                 
##################################################################################

Resources:
  AccessKeysRotated:
    Controls:
    - PR_AC-1
    Properties:
      ConfigRuleName: AccessKeysRotated
      Description: Checks whether the active access keys are rotated within the number
        of days specified in maxAccessKeyAge. The rule is non-compliant if the access
        keys have not been rotated for more than maxAccessKeyAge number of days.
      InputParameters:
        maxAccessKeyAge: '90'
      MaximumExecutionFrequency: TwentyFour_Hours
      Scope: {}
      Source:
        Owner: AWS
        SourceIdentifier: ACCESS_KEYS_ROTATED
    Type: AWS::Config::ConfigRule
  AcmCertificateExpirationCheck:
    Controls:
    - PR_AC-5
    Properties:
      ConfigRuleName: AcmCertificateExpirationCheck
      Description: Checks whether ACM Certificates in your account are marked for
        expiration within the specified number of days. Certificates provided by ACM
        are automatically renewed. ACM does not automatically renew certificates that
        you import.
      InputParameters:
        daysToExpiration: '14'
      MaximumExecutionFrequency: TwentyFour_Hours
      Scope:
        ComplianceResourceTypes:
        - AWS::ACM::Certificate
      Source:
        Owner: AWS
        SourceIdentifier: ACM_CERTIFICATE_EXPIRATION_CHECK
    Type: AWS::Config::ConfigRule
  CloudTrailCloudWatchLogsEnabled:
    Controls:
    - PR_PT-1
    Properties:
      ConfigRuleName: CloudTrailCloudWatchLogsEnabled
      Description: Checks whether AWS CloudTrail trails are configured to send logs
        to Amazon CloudWatch logs. The trail is non-compliant if the CloudWatchLogsLogGroupArn
        property of the trail is empty.
      MaximumExecutionFrequency: TwentyFour_Hours
      Scope: {}
      Source:
        Owner: AWS
        SourceIdentifier: CLOUD_TRAIL_CLOUD_WATCH_LOGS_ENABLED
    Type: AWS::Config::ConfigRule
  CloudTrailEnabled:
    Controls:
    - PR_PT-1
    Properties:
      ConfigRuleName: CloudTrailEnabled
      Description: Checks whether AWS CloudTrail is enabled in your AWS account.
      MaximumExecutionFrequency: TwentyFour_Hours
      Scope: {}
      Source:
        Owner: AWS
        SourceIdentifier: CLOUD_TRAIL_ENABLED
    Type: AWS::Config::ConfigRule
  CloudTrailEncryptionEnabled:
    Controls:
    - PR_DS-1
    Properties:
      ConfigRuleName: CloudTrailEncryptionEnabled
      Description: Checks whether AWS CloudTrail is configured to use the server side
        encryption (SSE) AWS Key Management Service (AWS KMS) customer master key
        (CMK) encryption. The rule is compliant if the KmsKeyId is defined.
      MaximumExecutionFrequency: TwentyFour_Hours
      Scope: {}
      Source:
        Owner: AWS
        SourceIdentifier: CLOUD_TRAIL_ENCRYPTION_ENABLED
    Type: AWS::Config::ConfigRule
  CloudwatchLogGroupEncrypted:
    Controls:
    - PR_DS-1
    Properties:
      ConfigRuleName: CloudwatchLogGroupEncrypted
      Description: Checks whether a log group in Amazon CloudWatch Logs is encrypted.
        The rule is NON_COMPLIANT if CloudWatch Logs has log group without encryption
        enabled.
      MaximumExecutionFrequency: TwentyFour_Hours
      Scope: {}
      Source:
        Owner: AWS
        SourceIdentifier: CLOUDWATCH_LOG_GROUP_ENCRYPTED
    Type: AWS::Config::ConfigRule
  Ec2InstanceManagedBySsm:
    Controls:
    - ID_AM-2
    Properties:
      ConfigRuleName: Ec2InstanceManagedBySsm
      Description: Checks whether the Amazon EC2 instances in your account are managed
        by AWS Systems Manager.
      Scope:
        ComplianceResourceTypes:
        - AWS::EC2::Instance
        - AWS::SSM::ManagedInstanceInventory
      Source:
        Owner: AWS
        SourceIdentifier: EC2_INSTANCE_MANAGED_BY_SSM
    Type: AWS::Config::ConfigRule
  Ec2InstanceNoPublicIp:
    Controls:
    - PR_AC-3
    Properties:
      ConfigRuleName: Ec2InstanceNoPublicIp
      Description: Checks whether Amazon Elastic Compute Cloud (Amazon EC2) instances
        have a public IP association. The rule is NON_COMPLIANT if the publicIp field
        is present in the Amazon EC2 instance configuration item. This rule applies
        only to IPv4.
      Scope:
        ComplianceResourceTypes:
        - AWS::EC2::Instance
      Source:
        Owner: AWS
        SourceIdentifier: EC2_INSTANCE_NO_PUBLIC_IP
    Type: AWS::Config::ConfigRule
  Ec2ManagedinstanceAssociationComplianceStatusCheck:
    Controls:
    - ID_AM-2
    Properties:
      ConfigRuleName: Ec2ManagedinstanceAssociationComplianceStatusCheck
      Description: Checks whether the compliance status of the AWS Systems Manager
        association compliance is COMPLIANT or NON_COMPLIANT after the association
        execution on the instance. The rule is compliant if the field status is COMPLIANT.
      Scope:
        ComplianceResourceTypes:
        - AWS::SSM::AssociationCompliance
      Source:
        Owner: AWS
        SourceIdentifier: EC2_MANAGEDINSTANCE_ASSOCIATION_COMPLIANCE_STATUS_CHECK
    Type: AWS::Config::ConfigRule
  Ec2SecurityGroupAttachedToEni:
    Controls:
    - PR_DS-3
    Properties:
      ConfigRuleName: Ec2SecurityGroupAttachedToEni
      Description: 'Checks that non-default security groups are attached to Amazon
        Elastic Compute Cloud (EC2) instances or an elastic network interfaces (ENIs).
        The rule returns NON_COMPLIANT if the security group is not associated with
        an EC2 instance or an ENI. '
      Scope:
        ComplianceResourceTypes:
        - AWS::EC2::SecurityGroup
      Source:
        Owner: AWS
        SourceIdentifier: EC2_SECURITY_GROUP_ATTACHED_TO_ENI
    Type: AWS::Config::ConfigRule
  EfsEncryptedCheck:
    Controls:
    - PR_DS-1
    Properties:
      ConfigRuleName: EfsEncryptedCheck
      Description: Checks whether Amazon EFS are configured to encrypt file data using
        AWS KMS. The rule is NON_COMPLIANT if the Encrypted key is set to False on
        DescribeFileSystems or, if specified, KmsKeyId key on DescribeFileSystems
        is not matching KmsKeyId parameter.
      MaximumExecutionFrequency: TwentyFour_Hours
      Scope: {}
      Source:
        Owner: AWS
        SourceIdentifier: EFS_ENCRYPTED_CHECK
    Type: AWS::Config::ConfigRule
  ElasticsearchEncryptedAtRest:
    Controls:
    - PR_DS-1
    Properties:
      ConfigRuleName: ElasticsearchEncryptedAtRest
      Description: Checks whether Amazon Elasticsearch Service (Amazon ES) domains
        have encryption at rest configuration enabled. The rule is NON_COMPLIANT if
        EncryptionAtRestOptions field is not enabled.
      MaximumExecutionFrequency: TwentyFour_Hours
      Scope: {}
      Source:
        Owner: AWS
        SourceIdentifier: ELASTICSEARCH_ENCRYPTED_AT_REST
    Type: AWS::Config::ConfigRule
  ElbAcmCertificateRequired:
    Controls:
    - PR_DS-2
    Properties:
      ConfigRuleName: ElbAcmCertificateRequired
      Description: This rule checks whether the Elastic Load Balancer(s) uses SSL
        certificates provided by AWS Certificate Manager. You must use an SSL or HTTPS
        listener with your Elastic Load Balancer to use this rule.
      Scope:
        ComplianceResourceTypes:
        - AWS::ElasticLoadBalancing::LoadBalancer
      Source:
        Owner: AWS
        SourceIdentifier: ELB_ACM_CERTIFICATE_REQUIRED
    Type: AWS::Config::ConfigRule
  EmrMasterNoPublicIp:
    Controls:
    - PR_AC-3
    Properties:
      ConfigRuleName: EmrMasterNoPublicIp
      Description: Checks whether Amazon Elastic MapReduce (EMR) clusters' master
        nodes have public IPs. The rule is NON_COMPLIANT if the master node has a
        public IP.
      MaximumExecutionFrequency: TwentyFour_Hours
      Scope:
        ComplianceResourceTypes: []
      Source:
        Owner: AWS
        SourceIdentifier: EMR_MASTER_NO_PUBLIC_IP
    Type: AWS::Config::ConfigRule
  EncryptedVolumes:
    Controls:
    - PR_DS-1
    Properties:
      ConfigRuleName: EncryptedVolumes
      Description: Checks whether EBS volumes that are in an attached state are encrypted.
      Scope:
        ComplianceResourceTypes:
        - AWS::EC2::Volume
      Source:
        Owner: AWS
        SourceIdentifier: ENCRYPTED_VOLUMES
    Type: AWS::Config::ConfigRule
  IamGroupHasUsersCheck:
    Controls:
    - PR_AC-4
    Properties:
      ConfigRuleName: IamGroupHasUsersCheck
      Description: Checks whether IAM groups have at least one IAM user.
      Scope:
        ComplianceResourceTypes:
        - AWS::IAM::Group
      Source:
        Owner: AWS
        SourceIdentifier: IAM_GROUP_HAS_USERS_CHECK
    Type: AWS::Config::ConfigRule
  IamPasswordPolicy:
    Controls:
    - PR_AC-1
    Properties:
      ConfigRuleName: IamPasswordPolicy
      Description: Checks whether the account password policy for IAM users meets
        the specified requirements.
      InputParameters:
        MaxPasswordAge: '90'
        MinimumPasswordLength: '14'
        PasswordReusePrevention: '24'
        RequireLowercaseCharacters: 'TRUE'
        RequireNumbers: 'TRUE'
        RequireSymbols: 'TRUE'
        RequireUppercaseCharacters: 'TRUE'
      MaximumExecutionFrequency: TwentyFour_Hours
      Scope: {}
      Source:
        Owner: AWS
        SourceIdentifier: IAM_PASSWORD_POLICY
    Type: AWS::Config::ConfigRule
  IamPolicyNoStatementsWithAdminAccess:
    Controls:
    - PR_AC-4
    Properties:
      ConfigRuleName: IamPolicyNoStatementsWithAdminAccess
      Description: 'Checks whether the default version of AWS Identity and Access
        Management (IAM) policies do not have administrator access. If any statement
        has "Effect": "Allow" with "Action": "*" over "Resource": "*", the rule is
        non-compliant.'
      Scope:
        ComplianceResourceTypes:
        - AWS::IAM::Policy
      Source:
        Owner: AWS
        SourceIdentifier: IAM_POLICY_NO_STATEMENTS_WITH_ADMIN_ACCESS
    Type: AWS::Config::ConfigRule
  IamRootAccessKeyCheck:
    Controls:
    - PR_AC-4
    Properties:
      ConfigRuleName: IamRootAccessKeyCheck
      Description: Checks whether the root user access key is available. The rule
        is compliant if the user access key does not exist.
      MaximumExecutionFrequency: TwentyFour_Hours
      Scope: {}
      Source:
        Owner: AWS
        SourceIdentifier: IAM_ROOT_ACCESS_KEY_CHECK
    Type: AWS::Config::ConfigRule
  IamUserGroupMembershipCheck:
    Controls:
    - PR_AC-4
    Properties:
      ConfigRuleName: IamUserGroupMembershipCheck
      Description: Checks whether IAM users are members of at least one IAM group.
      Scope:
        ComplianceResourceTypes:
        - AWS::IAM::User
      Source:
        Owner: AWS
        SourceIdentifier: IAM_USER_GROUP_MEMBERSHIP_CHECK
    Type: AWS::Config::ConfigRule
  IamUserMfaEnabled:
    Controls:
    - PR_AC-7
    Properties:
      ConfigRuleName: IamUserMfaEnabled
      Description: Checks whether the AWS Identity and Access Management users have
        multi-factor authentication (MFA) enabled.
      MaximumExecutionFrequency: TwentyFour_Hours
      Scope: {}
      Source:
        Owner: AWS
        SourceIdentifier: IAM_USER_MFA_ENABLED
    Type: AWS::Config::ConfigRule
  IamUserNoPoliciesCheck:
    Controls:
    - PR_AC-4
    Properties:
      ConfigRuleName: IamUserNoPoliciesCheck
      Description: Checks that none of your IAM users have policies attached. IAM
        users must inherit permissions from IAM groups or roles.
      Scope:
        ComplianceResourceTypes:
        - AWS::IAM::User
      Source:
        Owner: AWS
        SourceIdentifier: IAM_USER_NO_POLICIES_CHECK
    Type: AWS::Config::ConfigRule
  IamUserUnusedCredentialsCheck:
    Controls:
    - PR_AC-1
    Properties:
      ConfigRuleName: IamUserUnusedCredentialsCheck
      Description: Checks whether your AWS Identity and Access Management (IAM) users
        have passwords or active access keys that have not been used within the specified
        number of days you provided.
      InputParameters:
        maxCredentialUsageAge: '90'
      MaximumExecutionFrequency: TwentyFour_Hours
      Scope: {}
      Source:
        Owner: AWS
        SourceIdentifier: IAM_USER_UNUSED_CREDENTIALS_CHECK
    Type: AWS::Config::ConfigRule
  IncomingSshDisabled:
    Controls:
    - PR_AC-5
    Properties:
      ConfigRuleName: IncomingSshDisabled
      Description: Checks whether security groups that are in use disallow unrestricted
        incoming SSH traffic.
      Scope:
        ComplianceResourceTypes:
        - AWS::EC2::SecurityGroup
      Source:
        Owner: AWS
        SourceIdentifier: INCOMING_SSH_DISABLED
    Type: AWS::Config::ConfigRule
  InternetGatewayAuthorizedVpcOnly:
    Controls:
    - PR_AC-3
    Properties:
      ConfigRuleName: InternetGatewayAuthorizedVpcOnly
      Description: Checks that Internet gateways (IGWs) are only attached to an authorized
        Amazon Virtual Private Cloud (VPCs). The rule is NON_COMPLIANT if IGWs are
        not attached to an authorized VPC.
      Scope:
        ComplianceResourceTypes:
        - AWS::EC2::InternetGateway
      Source:
        Owner: AWS
        SourceIdentifier: INTERNET_GATEWAY_AUTHORIZED_VPC_ONLY
    Type: AWS::Config::ConfigRule
  LambdaFunctionPublicAccessProhibited:
    Controls:
    - PR_AC-3
    Properties:
      ConfigRuleName: LambdaFunctionPublicAccessProhibited
      Description: Checks whether the Lambda function policy prohibits public access.
      Scope:
        ComplianceResourceTypes:
        - AWS::Lambda::Function
      Source:
        Owner: AWS
        SourceIdentifier: LAMBDA_FUNCTION_PUBLIC_ACCESS_PROHIBITED
    Type: AWS::Config::ConfigRule
  MfaEnabledForIamConsoleAccess:
    Controls:
    - PR_AC-7
    Properties:
      ConfigRuleName: MfaEnabledForIamConsoleAccess
      Description: Checks whether AWS Multi-Factor Authentication (MFA) is enabled
        for all AWS Identity and Access Management (IAM) users that use a console
        password. The rule is compliant if MFA is enabled.
      MaximumExecutionFrequency: TwentyFour_Hours
      Scope: {}
      Source:
        Owner: AWS
        SourceIdentifier: MFA_ENABLED_FOR_IAM_CONSOLE_ACCESS
    Type: AWS::Config::ConfigRule
  RdsInstancePublicAccessCheck:
    Controls:
    - PR_AC-3
    Properties:
      ConfigRuleName: RdsInstancePublicAccessCheck
      Description: Checks whether the Amazon Relational Database Service (RDS) instances
        are not publicly accessible. The rule is non-compliant if the publiclyAccessible
        field is true in the instance configuration item.
      Scope:
        ComplianceResourceTypes:
        - AWS::RDS::DBInstance
      Source:
        Owner: AWS
        SourceIdentifier: RDS_INSTANCE_PUBLIC_ACCESS_CHECK
    Type: AWS::Config::ConfigRule
  RdsSnapshotsPublicProhibited:
    Controls:
    - PR_AC-3
    Properties:
      ConfigRuleName: RdsSnapshotsPublicProhibited
      Description: Checks if Amazon Relational Database Service (Amazon RDS) snapshots
        are public. The rule is non-compliant if any existing and new Amazon RDS snapshots
        are public.
      Scope:
        ComplianceResourceTypes:
        - AWS::RDS::DBSnapshot
        - AWS::RDS::DBClusterSnapshot
      Source:
        Owner: AWS
        SourceIdentifier: RDS_SNAPSHOTS_PUBLIC_PROHIBITED
    Type: AWS::Config::ConfigRule
  RdsStorageEncrypted:
    Controls:
    - PR_DS-1
    Properties:
      ConfigRuleName: RdsStorageEncrypted
      Description: Checks whether storage encryption is enabled for your RDS DB instances.
      Scope:
        ComplianceResourceTypes:
        - AWS::RDS::DBInstance
      Source:
        Owner: AWS
        SourceIdentifier: RDS_STORAGE_ENCRYPTED
    Type: AWS::Config::ConfigRule
  RedshiftClusterPublicAccessCheck:
    Controls:
    - PR_AC-3
    Properties:
      ConfigRuleName: RedshiftClusterPublicAccessCheck
      Description: Checks whether Amazon Redshift clusters are not publicly accessible.
        The rule is NON_COMPLIANT if the publiclyAccessible field is true in the cluster
        configuration item.
      Scope:
        ComplianceResourceTypes:
        - AWS::Redshift::Cluster
      Source:
        Owner: AWS
        SourceIdentifier: REDSHIFT_CLUSTER_PUBLIC_ACCESS_CHECK
    Type: AWS::Config::ConfigRule
  RestrictedIncomingTraffic:
    Controls:
    - PR_AC-5
    Properties:
      ConfigRuleName: RestrictedIncomingTraffic
      Description: Checks whether security groups that are in use disallow unrestricted
        incoming TCP traffic to the specified ports.
      InputParameters:
        blockedPort1: '20'
        blockedPort2: '21'
        blockedPort3: '3389'
        blockedPort4: '3306'
        blockedPort5: '4333'
      Scope:
        ComplianceResourceTypes:
        - AWS::EC2::SecurityGroup
      Source:
        Owner: AWS
        SourceIdentifier: RESTRICTED_INCOMING_TRAFFIC
    Type: AWS::Config::ConfigRule
  RootAccountHardwareMfaEnabled:
    Controls:
    - PR_AC-7
    Properties:
      ConfigRuleName: RootAccountHardwareMfaEnabled
      Description: Checks whether your AWS account is enabled to use multi-factor
        authentication (MFA) hardware device to sign in with root credentials.
      MaximumExecutionFrequency: TwentyFour_Hours
      Scope: {}
      Source:
        Owner: AWS
        SourceIdentifier: ROOT_ACCOUNT_HARDWARE_MFA_ENABLED
    Type: AWS::Config::ConfigRule
  RootAccountMfaEnabled:
    Controls:
    - PR_AC-7
    Properties:
      ConfigRuleName: RootAccountMfaEnabled
      Description: Checks whether the root user of your AWS account requires multi-factor
        authentication for console sign-in.
      MaximumExecutionFrequency: TwentyFour_Hours
      Scope: {}
      Source:
        Owner: AWS
        SourceIdentifier: ROOT_ACCOUNT_MFA_ENABLED
    Type: AWS::Config::ConfigRule
  S3AccountLevelPublicAccessBlocks:
    Controls:
    - PR_AC-3
    Properties:
      ConfigRuleName: S3AccountLevelPublicAccessBlocks
      Description: Checks whether the required public access block settings are configured
        from account level. The rule is NON_COMPLIANT when the public access block
        settings are not configured from account level.
      InputParameters:
        BlockPublicAcls: 'TRUE'
        BlockPublicPolicy: 'TRUE'
        IgnorePublicAcls: 'TRUE'
        RestrictPublicBuckets: 'TRUE'
      Scope:
        ComplianceResourceTypes:
        - AWS::S3::AccountPublicAccessBlock
      Source:
        Owner: AWS
        SourceIdentifier: S3_ACCOUNT_LEVEL_PUBLIC_ACCESS_BLOCKS
    Type: AWS::Config::ConfigRule
  S3BucketLoggingEnabled:
    Controls:
    - PR_PT-1
    Properties:
      ConfigRuleName: S3BucketLoggingEnabled
      Description: Checks whether logging is enabled for your S3 buckets.
      Scope:
        ComplianceResourceTypes:
        - AWS::S3::Bucket
      Source:
        Owner: AWS
        SourceIdentifier: S3_BUCKET_LOGGING_ENABLED
    Type: AWS::Config::ConfigRule
  S3BucketPolicyGranteeCheck:
    Controls:
    - PR_AC-1
    Properties:
      ConfigRuleName: S3BucketPolicyGranteeCheck
      Description: Checks that the access granted by the Amazon S3 bucket is restricted
        to any of the AWS principals, federated users, service principals, IP addresses,
        or VPCs that you provide. The rule is COMPLIANT if a bucket policy is not
        present.
      Scope:
        ComplianceResourceTypes:
        - AWS::S3::Bucket
      Source:
        Owner: AWS
        SourceIdentifier: S3_BUCKET_POLICY_GRANTEE_CHECK
    Type: AWS::Config::ConfigRule
  S3BucketPublicReadProhibited:
    Controls:
    - PR_AC-3
    Properties:
      ConfigRuleName: S3BucketPublicReadProhibited
      Description: Checks that your Amazon S3 buckets do not allow public read access.
        The rule checks the Block Public Access settings, the bucket policy, and the
        bucket access control list (ACL).
      MaximumExecutionFrequency: TwentyFour_Hours
      Scope:
        ComplianceResourceTypes:
        - AWS::S3::Bucket
      Source:
        Owner: AWS
        SourceIdentifier: S3_BUCKET_PUBLIC_READ_PROHIBITED
    Type: AWS::Config::ConfigRule
  S3BucketServerSideEncryptionEnabled:
    Controls:
    - PR_DS-1
    Properties:
      ConfigRuleName: S3BucketServerSideEncryptionEnabled
      Description: Checks that your Amazon S3 bucket either has S3 default encryption
        enabled or that the S3 bucket policy explicitly denies put-object requests
        without server side encryption.
      Scope:
        ComplianceResourceTypes:
        - AWS::S3::Bucket
      Source:
        Owner: AWS
        SourceIdentifier: S3_BUCKET_SERVER_SIDE_ENCRYPTION_ENABLED
    Type: AWS::Config::ConfigRule
  S3BucketSslRequestsOnly:
    Controls:
    - PR_DS-2
    Properties:
      ConfigRuleName: S3BucketSslRequestsOnly
      Description: Checks whether S3 buckets have policies that require requests to
        use Secure Socket Layer (SSL).
      Scope:
        ComplianceResourceTypes:
        - AWS::S3::Bucket
      Source:
        Owner: AWS
        SourceIdentifier: S3_BUCKET_SSL_REQUESTS_ONLY
    Type: AWS::Config::ConfigRule
  SagemakerNotebookInstanceKmsKeyConfigured:
    Controls:
    - PR_DS-1
    Properties:
      ConfigRuleName: SagemakerNotebookInstanceKmsKeyConfigured
      Description: Check whether an AWS Key Management Service (KMS) key is configured
        for an Amazon SageMaker notebook instance. The rule is NON_COMPLIANT if 'KmsKeyId'
        is not specified for the Amazon SageMaker notebook instance.
      MaximumExecutionFrequency: TwentyFour_Hours
      Scope: {}
      Source:
        Owner: AWS
        SourceIdentifier: SAGEMAKER_NOTEBOOK_INSTANCE_KMS_KEY_CONFIGURED
    Type: AWS::Config::ConfigRule
  SagemakerNotebookNoDirectInternetAccess:
    Controls:
    - PR_AC-3
    Properties:
      ConfigRuleName: SagemakerNotebookNoDirectInternetAccess
      Description: Checks whether direct internet access is disabled for an Amazon
        SageMaker notebook instance. The rule is NON_COMPLIANT if Amazon SageMaker
        notebook instances are internet-enabled.
      MaximumExecutionFrequency: TwentyFour_Hours
      Scope: {}
      Source:
        Owner: AWS
        SourceIdentifier: SAGEMAKER_NOTEBOOK_NO_DIRECT_INTERNET_ACCESS
    Type: AWS::Config::ConfigRule
  SecretsmanagerRotationEnabledCheck:
    Controls:
    - PR_AC-1
    Properties:
      ConfigRuleName: SecretsmanagerRotationEnabledCheck
      Description: Checks whether AWS Secret Manager secret has rotation enabled.
        If the maximumAllowedRotationFrequency parameter is specified, the rotation
        frequency of the secret is compared with the maximum allowed frequency.
      Scope:
        ComplianceResourceTypes:
        - AWS::SecretsManager::Secret
      Source:
        Owner: AWS
        SourceIdentifier: SECRETSMANAGER_ROTATION_ENABLED_CHECK
    Type: AWS::Config::ConfigRule
  VpcDefaultSecurityGroupClosed:
    Controls:
    - PR_AC-5
    Properties:
      ConfigRuleName: VpcDefaultSecurityGroupClosed
      Description: Checks that the default security group of any Amazon Virtual Private
        Cloud (VPC) does not allow inbound or outbound traffic. The rule is non-compliant
        if the default security group has one or more inbound or outbound traffic.
      Scope:
        ComplianceResourceTypes:
        - AWS::EC2::SecurityGroup
      Source:
        Owner: AWS
        SourceIdentifier: VPC_DEFAULT_SECURITY_GROUP_CLOSED
    Type: AWS::Config::ConfigRule
  VpcFlowLogsEnabled:
    Controls:
    - PR_PT-1
    Properties:
      ConfigRuleName: VpcFlowLogsEnabled
      Description: Checks whether Amazon Virtual Private Cloud flow logs are found
        and enabled for Amazon VPC.
      InputParameters:
        trafficType: ALL
      MaximumExecutionFrequency: TwentyFour_Hours
      Scope: {}
      Source:
        Owner: AWS
        SourceIdentifier: VPC_FLOW_LOGS_ENABLED
    Type: AWS::Config::ConfigRule